import MDEditor from "@uiw/react-md-editor";
import "@uiw/react-md-editor/markdown-editor.css";
import "@uiw/react-markdown-preview/markdown.css";

import database from "../assets/database.png";

function Accueil() {
  const content = `# ü•≥ Bienvenue sur WikiWilder :
  **Votre Compagnon de Formation √† la Wild Code School !! ü§ñ**

WikiWilder est bien plus qu'un simple wiki. C'est votre hub personnalis√© de connaissances et de partage, con√ßu exclusivement pour les apprenants de la Wild Code School. Gr√¢ce √† une interface conviviale et des fonctionnalit√©s avanc√©es, WikiWilder s'adresse √† ceux qui cherchent √† consolider leurs connaissances et √† √©largir leur compr√©hension du d√©veloppement web.

## ‚öôÔ∏è Fonctionnalit√©s du Projet :

- **1. Recaps Quotidiens :**
D√©couvrez une section d√©di√©e aux r√©capitulatifs quotidiens, offrant un aper√ßu complet des cours de la journ√©e.

- **2. Mot-Cl√© et Acronymes :**
Plongez dans la richesse des termes techniques avec notre section Mot-Cl√©, regroupant les acronymes essentiels rencontr√©s au fil de la formation.

- **3. Cours Basiques :**
Affinez vos comp√©tences de base avec des cours sur le d√©veloppement web, couvrant HTML, CSS, JavaScript, React, API, et bases de donn√©es SQL.

- **4. Carte Interactive avec Vis.js :**
Explorez visuellement les relations entre les mots-cl√©s gr√¢ce √† notre carte interactive aliment√©e par Vis.js.

- **5. Partage de Packages :**
D√©couvrez et partagez des packages int√©ressants pour enrichir votre bo√Æte √† outils de d√©veloppement.

- **6. Syst√®me  "Admin / R√¥le / Team" S√©curis√© :**
Notre syst√®me d'administration garantit l'int√©grit√© des informations. Seuls les administrateurs ont le pouvoir de modifier les mots-cl√©s et les cours. Les Wilders peuvent uniquement consulter les informations choisis par un admin et en aucun cas les modifiers. Les autres membres (DWWM CDA etc) peuvent quant √† eux, poster des packages qu'ils auraient trouv√©s interessant.

- **7. Connexion Personnalis√©e :**
WikiWilder va au-del√† de la simple consultation. ***Pour acc√©der aux fonctionnalit√©s, connectez-vous avec votre compte personnel.*** Cela garantit une exp√©rience adapt√©e √† vos besoins sp√©cifiques.

- **8. S√©curit√© et Confidentialit√© :**
Votre exp√©rience sur WikiWilder est s√©curis√©e et confidentielle. Gr√¢ce √† un syst√®me de login s√©curis√© et √† la gestion des r√¥les, seuls les utilisateurs autoris√©s peuvent acc√©der au contenu sp√©cifique et y contribuer.


## üì¶ Packages et Technologies Utilis√©s :

### *Frontend :*

- **React** : Biblioth√®que JavaScript pour la construction de l'interface utilisateur.
- **Material UI** : Biblioth√®que de composants React pour un design esth√©tique et coh√©rent. https://mui.com/material-ui/
- **Axios** : Biblioth√®que pour effectuer des requ√™tes HTTP.
- **MD Editor** : √âditeur Markdown pour la saisie de contenu. https://uiwjs.github.io/react-md-editor/
- **SASS (SCSS)** : Pr√©processeur CSS pour une gestion avanc√©e des styles.
- **Vis.js (vis network)** : Biblioth√®que pour la cr√©ation de graphiques interactifs. https://visjs.org/
- **Neumorphism** : Le n√©omorphisme ou neumorphisme est un style de design d'interface graphique caract√©ris√© par son souhait de donner un effet de relief. Ce style appara√Æt apr√®s le skeuomorphisme et le flat design dont il tente de faire la synth√®se. https://neumorphism.io/ 
- **Inspirations** : Obsidian, GitHub, Wikip√©dia. https://obsidian.md/

### *Backend :*

- **Express** : Cadre de d√©veloppement Node.js pour la cr√©ation d'API.
- **Cors** : Middleware pour g√©rer les autorisations d'acc√®s aux ressources c√¥t√© serveur.
- **Mysql2** : Module MySQL pour Node.js.
- **Argon2** : Algorithme de hachage s√©curis√© pour le stockage des mots de passe.
- **Cookie-parser** : Middleware pour la manipulation des cookies.
- **Jsonwebtoken** : G√©n√©ration de tokens JWT pour l'authentification.


### *D√©veloppement :*

- **Template de la Wild** : Permet de partir d'une base compl√®te et structur√©, limitant un peu le code mais lui offrant une meilleur re-lecture pour la suite du d√©veloppement.
Utilisation des CORS, CRUD, BREAD...
- **Eslint** : Linter pour maintenir la qualit√© du code.
- **Prettier** : Outil de formatage de code pour une coh√©rence stylistique.
- **Nodemon** : Utilitaire pour red√©marrer automatiquement le serveur lors des modifications.

## ‚ûï Mises √† Jour √† Venir :

- Syst√®me de favoris √† optimiser (cr√©er un filtre pour les pages en question et la map).

- Ajouter, √âditer, Supprimer des cat√©gories pour les mot-cl√©s.

- Syt√®me de r√©cap + l'afficher sp√©cifiquement pour la team de l'utilisateur.

- Rendre le syst√®me de r√¥les fonctionnel (Wilder, DWWM, CDA, TA, Master).

- Panneau admin complet avec gestion des utilisateurs, des r√¥les et des team (SACOD, JURASCRIPT, etc) en liste, d√©taill√©e, avec des boutons de modifications faciles d'acc√®s et pertinant.

- Proposer d'autres vues dans la carte, par exemple les packages + rajouter une toolbar pour modifier la phyisque du graph, revenir au centre, et d'autres am√©liorations...

- Terminer le responsive de certaines pages.

- Refaire un design propre pour le point Culture Dev et pour la 404.

- Peaufiner le parcours utilisateurs et admin.

- Rendre l'application PWA pour faciliter les r√©visions sur appareils portables.

- Faire un check complet de la s√©curit√©, double verifications des donn√©es envoy√©es en front et en back (regex etc)


## ‚ÜòÔ∏è Justification des Technologies Utilis√©es :

- **React** : Facilite la construction d'interfaces dynamiques et r√©actives.
- **Material UI** : Offre une conception esth√©tique et des composants pr√™ts √† l'emploi.
- **Axios** : Simple et efficace pour les requ√™tes HTTP.
- **Express** : L√©ger et rapide pour le d√©veloppement d'API.
- **Argon2** : Assure une s√©curit√© robuste pour le stockage des mots de passe.
- **Jsonwebtoken** : Gestion s√©curis√©e des tokens JWT pour l'authentification.
- **Vis.js** : Id√©al pour la repr√©sentation graphique des mots-cl√©s.
- **MD Editor** : Id√©al pour √©crire du code, et styliser facilement les cours.

### Voici le diagramme de la base de donn√©e actuel :`;

  return (
    <div className="body-content">
      <div
        style={{
          padding: "2rem",
          margin: "2rem auto 3.5rem auto",
          borderRadius: "1rem",
          background: "white",
          boxShadow: "41px 41px 82px #c4c4c4, -41px -41px 82px #ffffff",
        }}
      >
        <div data-color-mode="light">
          <div style={{ height: "100%", overflow: "hidden" }}>
            <MDEditor.Markdown
              source={content}
              style={{
                height: "100%",
                overflow: "hidden",
                margin: "1rem 0 0 0",
              }}
            />
          </div>
        </div>
        <img
          src={database}
          width={935}
          alt="Diagramme de la Base de Donn√©es"
          style={{ marginTop: "2rem", borderRadius: "1rem" }}
        />
      </div>
    </div>
  );
}

export default Accueil;
